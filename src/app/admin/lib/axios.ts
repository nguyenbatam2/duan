import axios from 'axios';
import Cookies from 'js-cookie';

// T·∫°o axios instance cho admin
const adminAxios = axios.create({
  baseURL: 'http://127.0.0.1:8000/api/v1',
  timeout: 10000,
  headers: {
    'Accept': 'application/json',
    'Content-Type': 'application/json',
  },
});

// Request interceptor - t·ª± ƒë·ªông th√™m token
adminAxios.interceptors.request.use(
  (config) => {
    console.log(`üöÄ API Request: ${config.method?.toUpperCase()} ${config.url}`);
    
    // Kh√¥ng th√™m token cho request login
    if (config.url === '/admin/auth/login') {
      console.log('üîê Admin login request - skipping token');
      return config;
    }
    
    const token = Cookies.get('token');
    if (token && config.headers) {
      config.headers.Authorization = `Bearer ${token}`;
      console.log('‚úÖ Token added to request');
    } else {
      console.log('‚ö†Ô∏è No token found for request');
    }
    
    return config;
  },
  (error) => {
    console.error('‚ùå Request interceptor error:', error);
    return Promise.reject(error);
  }
);

// Response interceptor - x·ª≠ l√Ω l·ªói 401
adminAxios.interceptors.response.use(
  (response) => {
    return response;
  },
  (error) => {
    // Kh√¥ng x·ª≠ l√Ω logout cho request login
    if (error.config?.url === '/admin/auth/login') {
      console.log('üîê Admin login request failed - not logging out');
      return Promise.reject(error);
    }
    
    if (error.response?.status === 401) {
      // Token h·∫øt h·∫°n ho·∫∑c kh√¥ng h·ª£p l·ªá
      console.log('Token h·∫øt h·∫°n, ƒëang ƒëƒÉng xu·∫•t...');
      
      // X√≥a token v√† user data
      Cookies.remove('token');
      Cookies.remove('author');
      localStorage.removeItem('admin_user');
      sessionStorage.clear();
      
      // Ch·ªâ redirect khi kh√¥ng ph·∫£i ·ªü trang login
      if (typeof window !== 'undefined' && !window.location.pathname.includes('/admin/login')) {
        window.location.href = '/admin/login';
      }
    }
    
    return Promise.reject(error);
  }
);

export default adminAxios; 